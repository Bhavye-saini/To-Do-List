<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Captain Bhavye's To-Do List</title>
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      background: #e3f2fd;
      display: flex;
      justify-content: center;
      padding: 50px;
    }
    .todo-container {
      background: white;
      padding: 30px;
      border-radius: 12px;
      box-shadow: 0 0 15px rgba(0,0,0,0.1);
      max-width: 500px;
      width: 100%;
    }
    h2 {
      text-align: center;
      margin-bottom: 20px;
      color: #0d47a1;
    }
    input[type="text"], input[type="date"] {
      padding: 10px;
      font-size: 15px;
      width: 60%;
      margin-bottom: 10px;
    }
    input[type="date"] {
      width: 35%;
    }
    button {
      padding: 10px;
      font-size: 15px;
      margin-left: 5px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
    .add-btn { background: #1976d2; color: white; }
    .clear-btn { background: #d32f2f; color: white; float: right; }
    .filter-btn { background: #90a4ae; color: white; margin: 5px 2px; }

    ul {
      list-style: none;
      padding: 0;
    }
    li {
      margin-top: 10px;
      padding: 10px;
      background: #f1f8e9;
      border-left: 5px solid #388e3c;
      display: flex;
      justify-content: space-between;
      align-items: center;
      border-radius: 5px;
    }
    li.completed {
      text-decoration: line-through;
      color: gray;
    }
    .task-text {
      flex: 1;
      cursor: pointer;
    }
    .task-date {
      font-size: 12px;
      margin-left: 10px;
      color: #888;
    }
    .edit-btn, .delete-btn {
      background: none;
      border: none;
      font-size: 16px;
      margin-left: 8px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <div class="todo-container">
    <h2>üõ°Ô∏è Captain Bhavye's To-Do List</h2>
    <input type="text" id="taskInput" placeholder="Add new task..." />
    <input type="date" id="dueDate" />
    <button class="add-btn" onclick="addTask()">Add</button>
    <button class="clear-btn" onclick="clearAll()">Clear All</button>
    
    <div style="margin-top:15px;">
      <button class="filter-btn" onclick="filterTasks('all')">All</button>
      <button class="filter-btn" onclick="filterTasks('completed')">Completed</button>
      <button class="filter-btn" onclick="filterTasks('pending')">Pending</button>
    </div>

    <ul id="taskList"></ul>
  </div>

  <script>
    let tasks = JSON.parse(localStorage.getItem('tasks')) || [];
    let currentFilter = 'all';

    function saveTasks() {
      localStorage.setItem('tasks', JSON.stringify(tasks));
    }

    function addTask() {
      const taskInput = document.getElementById('taskInput');
      const dueDateInput = document.getElementById('dueDate');
      const text = taskInput.value.trim();
      if (!text) return;

      tasks.push({ text, completed: false, due: dueDateInput.value });
      saveTasks();
      taskInput.value = '';
      dueDateInput.value = '';
      renderTasks();
    }

    function toggleComplete(index) {
      tasks[index].completed = !tasks[index].completed;
      saveTasks();
      renderTasks();
    }

    function editTask(index) {
      const newText = prompt("Edit your task:", tasks[index].text);
      if (newText !== null) {
        tasks[index].text = newText.trim();
        saveTasks();
        renderTasks();
      }
    }

    function deleteTask(index) {
      if (confirm("Are you sure?")) {
        tasks.splice(index, 1);
        saveTasks();
        renderTasks();
      }
    }

    function clearAll() {
      if (confirm("Clear all tasks?")) {
        tasks = [];
        saveTasks();
        renderTasks();
      }
    }

    function filterTasks(type) {
      currentFilter = type;
      renderTasks();
    }

    function renderTasks() {
      const list = document.getElementById('taskList');
      list.innerHTML = '';
      tasks.forEach((task, i) => {
        if (
          (currentFilter === 'completed' && !task.completed) ||
          (currentFilter === 'pending' && task.completed)
        ) return;

        const li = document.createElement('li');
        if (task.completed) li.classList.add('completed');

        const span = document.createElement('span');
        span.className = 'task-text';
        span.textContent = task.text;
        span.onclick = () => toggleComplete(i);

        const due = document.createElement('span');
        due.className = 'task-date';
        if (task.due) due.textContent = `üìÖ ${task.due}`;

        const editBtn = document.createElement('button');
        editBtn.innerHTML = '‚úèÔ∏è';
        editBtn.className = 'edit-btn';
        editBtn.onclick = () => editTask(i);

        const delBtn = document.createElement('button');
        delBtn.innerHTML = '‚ùå';
        delBtn.className = 'delete-btn';
        delBtn.onclick = () => deleteTask(i);

        li.appendChild(span);
        li.appendChild(due);
        li.appendChild(editBtn);
        li.appendChild(delBtn);
        list.appendChild(li);
      });
    }

    renderTasks();
  </script>
</body>
</html>
